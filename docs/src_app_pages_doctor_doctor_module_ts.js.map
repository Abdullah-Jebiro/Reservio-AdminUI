{"version":3,"file":"src_app_pages_doctor_doctor_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAOM,MAAOA,gBAAgB;;mBAAhBA,gBAAgB;AAAA;;QAAhBA,gBAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAHhBC,uDAAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACFE;AACF;AACuB;;;AAO7D,MAAOI,aAAa;EACxBC,YAAYA,CAACC,QAAa;IACxB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,SAASA,CAACC,OAAY;IACpB,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAG,YAAYA,CAACD,OAAY;IACvB,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAI,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAGT,yEAAkB;EAEa;EAExCW,YAAYA,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACI,MAAM,CAAC,GAAG,IAAI,CAACH,MAAM,WAAWE,QAAQ,EAAE,CAAC,CACzDE,IAAI,CAACf,0DAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EACvC;EAEAC,YAAYA,CAACC,QAAa;IACxB;IACA,MAAM;QAAEC;MAAS,IAAyBD,QAAQ;MAA5BE,eAAe,iDAAKF,QAAQ,EAA5C,aAAiC,CAAW;IAClD,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,SAAS;IACnCW,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAAMH,GAAG,EAAED,eAAe,CAAC,CAACL,IAAI,CAClDf,0DAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEAS,SAASA,CAACP,QAAwB;IAChC,MAAMQ,IAAI,GAAmB;MAC3BC,QAAQ,EAAET,QAAQ,CAACS,QAAQ;MAC3BC,UAAU,EAAEV,QAAQ,CAACU;KACtB;IACD,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACmB,IAAI,CAAMR,GAAG,EAAEK,IAAI,CAAC,CAACX,IAAI,CACxCf,0DAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEAc,aAAaA,CAACjB,QAAgB;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACqB,GAAG,CAAM,GAAG,IAAI,CAACpB,MAAM,WAAWE,QAAQ,EAAE,CAAC,CAC3DE,IAAI,CAACf,0DAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAAC;EACvC;EAEAgB,UAAUA,CAACC,UAAkB,EAAEC,QAAgB;IAC7C,IAAIb,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,SAAS;IACjC,OAAO,IAAI,CAACD,IAAI,CAACqB,GAAG,CAAQV,GAAG,EAAE;MAAEc,OAAO,EAAE;IAAU,CAAE,CAAC,CAACpB,IAAI,CAC5Df,0DAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEAA,WAAWA,CAACoB,KAAwB;IAClC,IAAIC,YAAY,GAAW,EAAE;IAC7B,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrCD,YAAY,GAAG,sBAAsBD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;KAC3D,MAAM;MACLF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,OAAO,EAAE;;IAE1EjB,OAAO,CAACC,GAAG,CAACc,YAAY,CAAC;IACzB,OAAOtC,gDAAU,CAAC,MAAMsC,YAAY,CAAC;EACvC;;;mBA7DWnC,aAAa;AAAA;;SAAbA,aAAa;EAAAuC,SAAbvC,aAAa;EAAAwC,YAFZ;AAAM;;;;;;;;;;;;;;;;;;;ACRmC;AACsB;AACtB;;;AAEvD,MAAMG,MAAM,GAAW,CAAC;EACvBC,IAAI,EAAE,EAAE;EACTC,SAAS,EAAEH,sFAAoB;EAC/BI,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAEH,sFAAoBA;GAChC;CAEF,CAAC;AAMI,MAAOK,mBAAmB;;mBAAnBA,mBAAmB;AAAA;;QAAnBA;AAAmB;;YAHpBN,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXM,mBAAmB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFpBT,yDAAY;EAAA;AAAA;AAGjB,MAAMU,gBAAgB,GAAG,CAC9B5D,+DAAgB,EAChBmD,sFAAoB,CACrB;;;;;;;;;;;;;;;;;;;ACtBiD;AAChB;;;;;AAO5B,MAAOA,oBAAoB;EAkC/BnC,YAAoB+C,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAjCzB,SAAI,GAAG,IAAID,4CAAO,EAAE;IAE5B,aAAQ,GAAG;MACTE,GAAG,EAAE;QACHC,gBAAgB,EAAE,yBAAyB;QAC3CC,mBAAmB,EAAE,8BAA8B;QACnDC,mBAAmB,EAAE,0BAA0B;QAC/CC,aAAa,EAAE;OAChB;MACDC,IAAI,EAAE;QACJC,iBAAiB,EAAE,yBAAyB;QAC5CC,iBAAiB,EAAE,8BAA8B;QACjDJ,mBAAmB,EAAE,0BAA0B;QAC/CK,WAAW,EAAE;OACd;MACDnD,MAAM,EAAE;QACNoD,mBAAmB,EAAE,0BAA0B;QAC/CC,aAAa,EAAE;OAChB;MACDC,OAAO,EAAE;QACPzC,QAAQ,EAAE;UACR0C,KAAK,EAAE,WAAW;UAClBC,IAAI,EAAE;SACP;QACD1C,UAAU,EAAE;UACVyC,KAAK,EAAE,YAAY;UACnBC,IAAI,EAAE;;;KAGX;IAED,WAAM,GAAoB,IAAIhB,4DAAe,EAAE;EAEI;EAEnDiB,QAAQA;IACN,IAAI,CAACC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACjB,aAAa,CAACxB,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC0C,SAAS,CAAC;MAC/DC,IAAI,EAAGjD,IAAI,IAAI;QACb,IAAI,CAACkD,MAAM,CAACC,IAAI,CAACnD,IAAI,CAACoD,IAAI,CAAC;MAC7B,CAAC;MACD1C,KAAK,EAAGA,KAAK,IAAI;QACfd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;EAEA2C,eAAeA,CAACC,KAAK;IACnB,IAAIC,MAAM,CAACC,OAAO,CAAC,kCAAkC,CAAC,EAAE;MACtD,IAAI,CAACV,IAAI,CAACC,IAAI,GAAG,IAAI,CAACjB,aAAa,CAChC5C,YAAY,CAACoE,KAAK,CAACtD,IAAI,CAACb,QAAQ,CAAC,CACjC6D,SAAS,CAAC;QACTC,IAAI,EAAEA,MAAK;UACTK,KAAK,CAACE,OAAO,CAACC,OAAO,EAAE;QACzB,CAAC;QACD/C,KAAK,EAAGA,KAAK,IAAI;UACfd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;QACpB;OACD,CAAC;KACL,MAAM;MACL4C,KAAK,CAACE,OAAO,CAACE,MAAM,EAAE;;EAE1B;EAEAC,eAAeA,CAACL,KAAK;IACnB,IAAI,CAACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACjB,aAAa,CAAC/B,SAAS,CAACuD,KAAK,CAACzE,OAAO,CAAC,CAACmE,SAAS,CAAC;MACrEC,IAAI,EAAEA,MAAK;QACTK,KAAK,CAACE,OAAO,CAACC,OAAO,EAAE;MACzB,CAAC;MACD/C,KAAK,EAAGA,KAAK,IAAI;QACfd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;EAEAkD,aAAaA,CAACN,KAAK;IACjB,IAAI,CAACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACjB,aAAa,CAACvC,YAAY,CAAC+D,KAAK,CAACzE,OAAO,CAAC,CAACmE,SAAS,CAAC;MACxEC,IAAI,EAAEA,MAAK;QACTK,KAAK,CAACE,OAAO,CAACC,OAAO,EAAE;MACzB,CAAC;MACD/C,KAAK,EAAGA,KAAK,IAAI;QACfd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB;KACD,CAAC;EACJ;EAEAmD,WAAWA;IACT,IAAI,CAACf,IAAI,CAACgB,WAAW,EAAE;EACzB;;;mBAxFW5C,oBAAoB;AAAA;;QAApBA,oBAAoB;EAAAlD;EAAAC;EAAAC;EAAA6F;EAAA5F;IAAA;MCVjCC,4DAAAA,cAAS;MAKDA,wDAAAA;QAAA,OAAiB4F,2BAAuB;MAAA,EAAC;QAAA,OAC1BA,yBAAqB;MAAA,EADK;QAAA,OAExBA,2BAAuB;MAAA,EAFC;MAI3C5F,0DAAAA,EAAkB;;;MANhBA,uDAAAA,GAAqB;MAArBA,wDAAAA,0BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFkB;AAEiC;AACH;AACF;AACrB;AACE;;;;AAkBlD,MAAOmG,YAAY;;mBAAZA,YAAY;AAAA;;QAAZA;AAAY;;YAbrBN,yDAAY,EACZ1C,uEAAmB,EACnB2C,wDAAY,EACZC,wDAAY,EACZC,yDAAa,EACbE,4DAAW,EACXD,gEAAmB;AAAA;;sHAOVE,YAAY;IAAAC,eAJrBtD,sFAAoB;IAAAO,UATpBwC,yDAAY,EACZ1C,uEAAmB,EACnB2C,wDAAY,EACZC,wDAAY,EACZC,yDAAa,EACbE,4DAAW,EACXD,gEAAmB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBvB,IAAII,UAAU,GAAG,SAAAA,CAAUC,EAAE,EAAE;EAAE,OAAO,OAAOA,EAAE,KAAK,UAAU;AAAE,CAAC;AACnE;AACA;AACA;AACA;AACA,IAAI7C,OAAO,GAAG,aAAe,YAAY;EACrC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,OAAOA,CAAA,EAAG;IACf,IAAI,CAAC8C,KAAK,GAAG,EAAE;EACnB;EACA;AACJ;AACA;AACA;AACA;EACI9C,OAAO,CAAC+C,SAAS,CAAC7C,GAAG,GAAG,YAAY;IAChC,IAAI8C,aAAa,GAAG,EAAE;IACtB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;MAC1CD,aAAa,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;IACrC;IACA,IAAI,CAACH,KAAK,GAAG,IAAI,CAACA,KAAK,CAACM,MAAM,CAACJ,aAAa,CAAC;EACjD,CAAC;EACDK,MAAM,CAACC,cAAc,CAACtD,OAAO,CAAC+C,SAAS,EAAE,MAAM,EAAE;IAC7C;AACR;AACA;AACA;AACA;IACQQ,GAAG,EAAE,SAAAA,CAAUC,YAAY,EAAE;MACzB,IAAI,CAACV,KAAK,CAACW,IAAI,CAACD,YAAY,CAAC;IACjC,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;EACI3D,OAAO,CAAC+C,SAAS,CAACd,WAAW,GAAG,YAAY;IACxC,IAAI,CAACa,KAAK,CAACc,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAIjB,UAAU,CAACiB,GAAG,CAAC5B,WAAW,CAAC,IAAI4B,GAAG,CAAC5B,WAAW,CAAC,CAAC;IAAE,CAAC,CAAC;IACtG,IAAI,CAACa,KAAK,GAAG,EAAE;EACnB,CAAC;EACD,OAAO9C,OAAO;AAClB,CAAC,CAAC,CAAE","sources":["./src/app/pages/doctor/DoctorsComponent.ts","./src/app/pages/doctor/Services/doctor.service.ts","./src/app/pages/doctor/doctor-routing.module.ts","./src/app/pages/doctor/doctor-table/doctor-table.component.ts","./src/app/pages/doctor/doctor-table/doctor-table.component.html","./src/app/pages/doctor/doctor.module.ts","./node_modules/subsink/dist/es2015/subsink.js"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-doctors',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\n\r\nexport class DoctorsComponent {\r\n             \r\n}\r\n\r\n\r\n","import { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ClinicCreationDTO } from '../../clinics/Model/ClinicCreationDTO';\r\nimport { DoctorCreation } from '../Model/DoctorCreation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorService {\r\n  deleteClinic(clinicId: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  addClinic(newData: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  updateClinic(newData: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  deleteDoctor(doctorId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}Doctors/${doctorId}`)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  updateDoctor(formData: any): Observable<any> {\r\n    // Remove the isDeleted field\r\n    const { isDeleted, ...updatedFormData } = formData;\r\n    const url = `${this.apiUrl}Doctors`;\r\n    console.log(formData);\r\n    return this.http.put<any>(url, updatedFormData).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n  addDoctor(formData: DoctorCreation): Observable<any> {\r\n    const data: DoctorCreation = {\r\n      fullName: formData.fullName,\r\n      specialist: formData.specialist,\r\n    };\r\n    const url = `${this.apiUrl}Doctors`;\r\n    return this.http.post<any>(url, data).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getDoctorById(doctorId: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}Doctors/${doctorId}`)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n \r\n  getDoctors(pageNumber: number, pageSize: number): Observable<HttpResponse<any[]>> {\r\n    let url = `${this.apiUrl}Doctors`;\r\n    return this.http.get<any[]>(url, { observe: 'response' }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage: string = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Client-side error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = `Error Code: ${error.status}, Message: ${error?.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(() => errorMessage);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DoctorTableComponent } from './doctor-table/doctor-table.component';\r\n import { DoctorsComponent } from './DoctorsComponent';\r\n\r\nconst routes: Routes = [{\r\n path: '',\r\ncomponent: DoctorTableComponent,\r\nchildren: [\r\n  {\r\n    path: 'doctor-table',\r\n    component: DoctorTableComponent,\r\n  },\r\n],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DoctorRoutingModule { }\r\nexport const routedComponents = [\r\n  DoctorsComponent,\r\n  DoctorTableComponent\r\n];\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { DoctorService } from \"../Services/doctor.service\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { SubSink } from \"subsink\";\r\n\r\n@Component({\r\n  selector: \"ngx-doctor-table\",\r\n  templateUrl: \"./doctor-table.component.html\",\r\n  styleUrls: [\"./doctor-table.component.scss\"],\r\n})\r\nexport class DoctorTableComponent implements OnInit, OnDestroy {\r\n  private subs = new SubSink();\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true,\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      fullName: {\r\n        title: \"Full Name\",\r\n        type: \"string\",\r\n      },\r\n      specialist: {\r\n        title: \"Specialist\",\r\n        type: \"string\",\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private doctorService: DoctorService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subs.sink = this.doctorService.getDoctors(1, 100).subscribe({\r\n      next: (data) => {\r\n        this.source.load(data.body);\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      this.subs.sink = this.doctorService\r\n        .deleteDoctor(event.data.doctorId)\r\n        .subscribe({\r\n          next: () => {\r\n            event.confirm.resolve();\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        });\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event): void {\r\n    this.subs.sink = this.doctorService.addDoctor(event.newData).subscribe({\r\n      next: () => {\r\n        event.confirm.resolve();\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  onSaveConfirm(event): void {\r\n    this.subs.sink = this.doctorService.updateDoctor(event.newData).subscribe({\r\n      next: () => {\r\n        event.confirm.resolve();\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-body>\r\n      <ng2-smart-table\r\n        [settings]=\"settings\"\r\n        [source]=\"source\"\r\n        (createConfirm)=\"onCreateConfirm($event)\"\r\n        (editConfirm)=\"onSaveConfirm($event)\"\r\n        (deleteConfirm)=\"onDeleteConfirm($event)\"\r\n      >\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DoctorRoutingModule, routedComponents } from './doctor-routing.module';\r\nimport { DoctorTableComponent } from './doctor-table/doctor-table.component';\r\nimport { NbCardModule, NbIconModule, NbInputModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\n\r\n@NgModule({\r\n \r\n  imports: [\r\n    CommonModule,\r\n    DoctorRoutingModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n  declarations: [\r\n    DoctorTableComponent,\r\n    ...routedComponents\r\n  ],\r\n})\r\nexport class DoctorModule { }\r\n\r\n","var isFunction = function (fn) { return typeof fn === 'function'; };\n/**\n * Subscription sink that holds Observable subscriptions\n * until you call unsubscribe on it in ngOnDestroy.\n */\nvar SubSink = /** @class */ (function () {\n    /**\n     * Subscription sink that holds Observable subscriptions\n     * until you call unsubscribe on it in ngOnDestroy.\n     *\n     * @example\n     * In Angular:\n     * ```\n     *   private subs = new SubSink();\n     *   ...\n     *   this.subs.sink = observable$.subscribe(...)\n     *   this.subs.add(observable$.subscribe(...));\n     *   ...\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     * ```\n     */\n    function SubSink() {\n        this._subs = [];\n    }\n    /**\n     * Add subscriptions to the tracked subscriptions\n     * @example\n     *  this.subs.add(observable$.subscribe(...));\n     */\n    SubSink.prototype.add = function () {\n        var subscriptions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            subscriptions[_i] = arguments[_i];\n        }\n        this._subs = this._subs.concat(subscriptions);\n    };\n    Object.defineProperty(SubSink.prototype, \"sink\", {\n        /**\n         * Assign subscription to this sink to add it to the tracked subscriptions\n         * @example\n         *  this.subs.sink = observable$.subscribe(...);\n         */\n        set: function (subscription) {\n            this._subs.push(subscription);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Unsubscribe to all subscriptions in ngOnDestroy()\n     * @example\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     */\n    SubSink.prototype.unsubscribe = function () {\n        this._subs.forEach(function (sub) { return sub && isFunction(sub.unsubscribe) && sub.unsubscribe(); });\n        this._subs = [];\n    };\n    return SubSink;\n}());\nexport { SubSink };\n"],"names":["DoctorsComponent","selectors","decls","vars","template","i0","throwError","catchError","environment","DoctorService","deleteClinic","clinicId","Error","addClinic","newData","updateClinic","constructor","http","apiUrl","deleteDoctor","doctorId","delete","pipe","handleError","updateDoctor","formData","isDeleted","updatedFormData","url","console","log","put","addDoctor","data","fullName","specialist","post","getDoctorById","get","getDoctors","pageNumber","pageSize","observe","error","errorMessage","ErrorEvent","message","status","factory","providedIn","RouterModule","DoctorTableComponent","routes","path","component","children","DoctorRoutingModule","forChild","imports","exports","routedComponents","LocalDataSource","SubSink","doctorService","add","addButtonContent","createButtonContent","cancelButtonContent","confirmCreate","edit","editButtonContent","saveButtonContent","confirmSave","deleteButtonContent","confirmDelete","columns","title","type","ngOnInit","subs","sink","subscribe","next","source","load","body","onDeleteConfirm","event","window","confirm","resolve","reject","onCreateConfirm","onSaveConfirm","ngOnDestroy","unsubscribe","consts","ctx","CommonModule","NbCardModule","NbIconModule","NbInputModule","Ng2SmartTableModule","ThemeModule","DoctorModule","declarations","isFunction","fn","_subs","prototype","subscriptions","_i","arguments","length","concat","Object","defineProperty","set","subscription","push","enumerable","configurable","forEach","sub"],"sourceRoot":"webpack:///","x_google_ignoreList":[6]}