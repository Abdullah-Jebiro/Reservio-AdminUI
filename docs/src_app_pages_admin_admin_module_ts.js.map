{"version":3,"file":"src_app_pages_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/pages/admin/admin.module.ts","./src/app/pages/admin/admin.service.ts","./src/app/pages/admin/components/table-user/table-user.component.html","./src/app/pages/admin/components/table-user/table-user.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TableUserComponent } from './components/table-user/table-user.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableUserComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: '', component: TableUserComponent },\r\n      { path: 'User', component: TableUserComponent },\r\n   \r\n\r\n\r\n    ])\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { IDeleteRoleRequest } from '../admin/models/IDeleteRoleRequest';\r\nimport { IAddRoleRequest } from '../admin/models/IAddRoleRequest';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  private apiUrl = environment.apiUrl + 'Admin/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n \r\n\r\n\r\n  getAllUsersWithRoles(pageName: number = 1, PageSize: number = 50 ,email?: string, ): Observable<HttpResponse<any[]>> {\r\n\r\n    const params = {\r\n      pageName: pageName.toString(),\r\n      PageSize: PageSize.toString(),\r\n      email: email || '',\r\n\r\n    };\r\n    const httpOptions = {\r\n      withCredentials: true\r\n    };\r\n\r\n    return this.http.get<any[]>(this.apiUrl + 'AllUserWithRoles', { params,observe: 'response' , ...httpOptions}).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addRoleForUser(request: IAddRoleRequest): Observable<any> {\r\n    return this.http.post(this.apiUrl + 'AddRoleForUser', request).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  deleteRoleForUser(request: IDeleteRoleRequest): Observable<any> {\r\n    console.log(request);\r\n    \r\n    return this.http.delete(this.apiUrl + 'DeleteRoleForUser', { body: request }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getRoles(): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}AllRoles`).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): Observable<never> {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Client-side error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = `Error Code: ${error.status || 500}\\nMessage: ${error.error?.Message || error.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n","<div class=\"col-12 row\">\r\n    <div class=\"col-8 mt-2\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"table-responsive background-table\">\r\n                    <table class=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Username</th>\r\n                                <th>Email</th>\r\n                                <th>Role</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let user of users | paginate: { itemsPerPage: 50, currentPage: currentPage, totalItems: totalItems, id: 'User' }\"\r\n                                (click)=\"selectUser(user)\">\r\n                                <td>{{ user.userName }}</td>\r\n                                <td>{{ user.email }}</td>\r\n                                <td>{{ user.roles }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <pagination-controls class=\"m-auto\" (pageChange)=\"pageChanged($event)\"\r\n                        [routerLink]=\"['/Admin/User']\" [queryParams]=\"{ currentPage: currentPage }\" id=\"User\">\r\n                    </pagination-controls>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-4 mt-2\">\r\n\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <h5 style=\"font-weight: 700;\">Permissions Settings</h5>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"userSelect\" class=\"m-3\"> Selected User:</label>\r\n                    <span>{{selectedUser}}</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"roleSelect\" class=\"m-3\">Select Role: </label>\r\n                    <select id=\"roleSelect\" [(ngModel)]=\"selectedRole\">\r\n                        <option *ngFor=\"let role of roles\" [ngValue]=\"role.id\">{{ role.name }}</option>\r\n                    </select>\r\n                </div>\r\n                <button class=\"btn btn-primary m-3\" (click)=\"addRole()\">Add Role</button>\r\n                <button class=\"btn btn-danger\" (click)=\"deleteRole()\">Delete Role</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IDeleteRoleRequest } from '../../models/IDeleteRoleRequest';\r\nimport { IAddRoleRequest } from '../../models/IAddRoleRequest';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AdminService } from '../../admin.service';\r\n\r\n@Component({\r\n  selector: 'ngx-table-user',\r\n  templateUrl: './table-user.component.html',\r\n  styleUrls: ['./table-user.component.css'],\r\n})\r\nexport class TableUserComponent implements OnInit {\r\n  users: any[] = [];\r\n  currentPage = 1;\r\n  totalPages: number | undefined;\r\n  totalItems: number | undefined;\r\n  selectedUser!: string; // Initialize as null or undefined\r\n  userId!: number;\r\n  selectedRole!: any; // Initialize as null or undefined\r\n  roles: any[] = [];\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private toastr: ToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadUsers(this.currentPage);\r\n    this.loadRoles();\r\n  }\r\n\r\n  selectUser(user: any): void {\r\n    this.selectedUser = user.email;\r\n    this.userId = user.id;\r\n    console.log(this.userId);\r\n    console.log(user);\r\n  }\r\n  loadUsers(page: number): void {\r\n    this.adminService\r\n      .getAllUsersWithRoles(page)\r\n      .subscribe((response: HttpResponse<any>) => {\r\n        const data = response.body?.data;\r\n        const paginationData = JSON.parse(\r\n          response.headers.get('x-pagination')!\r\n        );\r\n\r\n        if (data) {\r\n          this.users = data;\r\n        }\r\n\r\n        this.totalPages = paginationData?.TotalPageCount;\r\n        this.currentPage = paginationData?.CurrentPage;\r\n        this.totalItems = paginationData?.TotalItemCount;\r\n      });\r\n  }\r\n\r\n  loadRoles(): void {\r\n    this.adminService.getRoles().subscribe((roles: any[]) => {\r\n      this.roles = roles;\r\n    });\r\n  }\r\n\r\n  addRole(): void {\r\n    if (this.selectedUser && this.selectedRole) {\r\n      const request: IAddRoleRequest = {\r\n        userId: this.userId,\r\n        roleId: this.selectedRole,\r\n      };\r\n  \r\n      this.adminService.addRoleForUser(request).subscribe(\r\n        () => {\r\n          this.loadUsers(this.currentPage);\r\n          this.toastr.success('Role added successfully'); // Show success toast\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Failed to add role'); // Show error toast\r\n          console.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      this.toastr.warning('Please select a user and a role'); // Show a warning toast\r\n    }\r\n  }\r\n  \r\n  deleteRole(): void {\r\n    if (this.selectedUser && this.selectedRole) {\r\n      const request: IDeleteRoleRequest = {\r\n        userId: this.userId,\r\n        roleId: this.selectedRole,\r\n      };\r\n\r\n      this.adminService.deleteRoleForUser(request).subscribe(\r\n        () => {\r\n          this.loadUsers(this.currentPage);\r\n          this.toastr.success('Role deleted successfully'); // Show success toast\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Failed to delete role'); // Show error toast\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      this.toastr.warning('Please select a user and a role'); // Show a warning toast\r\n    }\r\n  }\r\n\r\n  pageChanged(page: number): void {\r\n    this.loadUsers(page);\r\n  }\r\n}\r\n"],"names":["CommonModule","SharedModule","RouterModule","TableUserComponent","AdminModule","forChild","path","component","declarations","imports","throwError","catchError","environment","AdminService","constructor","http","apiUrl","getAllUsersWithRoles","pageName","PageSize","email","params","toString","httpOptions","withCredentials","get","observe","pipe","handleError","addRoleForUser","request","post","deleteRoleForUser","console","log","delete","body","getRoles","error","errorMessage","ErrorEvent","message","status","Message","factory","providedIn","i0","adminService","toastr","ngOnInit","loadUsers","currentPage","loadRoles","selectUser","user","selectedUser","userId","id","page","subscribe","response","data","paginationData","JSON","parse","headers","users","totalPages","TotalPageCount","CurrentPage","totalItems","TotalItemCount","roles","addRole","selectedRole","roleId","success","warning","deleteRole","pageChanged","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}