{"version":3,"file":"src_app_pages_vacation_vacation_module_ts.js","mappings":"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","sources":["./src/app/pages/vacation/Services/vacation.service.ts","./src/app/pages/vacation/VacationComponent.ts","./src/app/pages/vacation/vacaction-list/vacaction-list.component.ts","./src/app/pages/vacation/vacaction-list/vacaction-list.component.html","./src/app/pages/vacation/vacation-routing.module.ts","./src/app/pages/vacation/vacation.module.ts","./node_modules/subsink/dist/es2015/subsink.js"],"sourcesContent":["import { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Vacation } from '../Model/vacation';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { VacationResponse } from '../Model/vacationDTO';\r\nimport { VacationAddDto } from '../Model/vacationAddDTo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VacationService {\r\n  apiUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n  getVacations(): Observable<HttpResponse<VacationResponse>> {\r\n    const url = `${this.apiUrl}Vacations`;\r\n    return this.http.get<VacationResponse>(url, { observe: 'response' })\r\n      .pipe(catchError(this.handleError));\r\n\r\n  }\r\n  addVaction(createVacation: VacationAddDto): Observable<VacationAddDto> {\r\n    return this.http.post<VacationAddDto>(`${this.apiUrl}Vacations`, createVacation)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n  deleteVacation(vacationId: number): Observable<void> {\r\n    const url = `${this.apiUrl}Vacations/${vacationId}`;\r\n    return this.http.delete<void>(url)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage: string = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Client-side error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = `Error Code: ${error.status}, Message: ${error?.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class  VacationComponent {\r\n \r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DayOfWeek } from '../../../@core/data/DayOfWeek';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { SubSink } from 'subsink';\r\nimport { VacationService } from '../Services/vacation.service';\r\nimport { Vacation } from '../Model/vacation';\r\nimport { VacationResponse } from '../Model/vacationDTO';\r\nimport { VacationAddDto } from '../Model/vacationAddDTo';\r\n\r\n@Component({\r\n  selector: 'ngx-vacaction-list',\r\n  templateUrl: './vacaction-list.component.html',\r\n  styleUrls: ['./vacaction-list.component.scss']\r\n})\r\n\r\nexport class VacactionListComponent implements OnInit, OnDestroy {\r\n\r\n  private subs = new SubSink();\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private vacactionService: VacationService) { }\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true,\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    // columns: {\r\n    //   doctor: {\r\n    //     title: \"Doctor Name\",\r\n    //     type: \"string\",\r\n    //   },\r\n    //   dateTime: {\r\n    //     title: \"Date Time\",\r\n    //     type: \"string\",\r\n    //   }, \r\n    // },\r\n\r\n    columns: {\r\n      doctor: {\r\n        title: 'Doctor',\r\n        editor: {\r\n          type: 'list',\r\n          config: {\r\n            list: []\r\n            , filter: true\r\n          }\r\n        },\r\n      },\r\n      dateTime: {\r\n        title: 'dateTime',\r\n        type: 'string',\r\n        editable: false,\r\n        filter: false,\r\n        addable: true\r\n      },\r\n    },\r\n\r\n    actions: {\r\n      columnTitle: '',\r\n      add: true,\r\n      edit: true,\r\n      position: 'left'\r\n    },\r\n  };\r\n  ngOnInit(): void {\r\n    this.subs.sink = this.vacactionService.getVacations().subscribe({\r\n      next: (data) => {\r\n        var obj: VacationResponse = data.body;\r\n        this.source.load(obj.vacations);\r\n        this.settings = {\r\n          add: {\r\n            addButtonContent: '<i class=\"nb-plus\"></i>',\r\n            createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n            confirmCreate: true,\r\n          },\r\n          edit: {\r\n            editButtonContent: '<i class=\"nb-edit\"></i>',\r\n            saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n            cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n            confirmSave: true,\r\n          },\r\n          delete: {\r\n            deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n            confirmDelete: true,\r\n          },\r\n          columns: {\r\n            doctor: {\r\n              title: 'Doctor',\r\n              editor: {\r\n                type: 'list',\r\n                config: {\r\n                  list: obj.doctorPairs\r\n                  , filter: true\r\n                }\r\n              },\r\n            },\r\n            dateTime: {\r\n              title: 'dateTime',\r\n              type: 'string',\r\n              editable: false,\r\n              filter: false,\r\n              addable: true\r\n            },\r\n          },\r\n\r\n          actions: {\r\n            columnTitle: '',\r\n            add: true,\r\n            edit: true,\r\n            position: 'left'\r\n          },\r\n        };\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n  onDeleteConfirm(event): void {\r\n    console.log(event.data);\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      this.subs.sink = this.vacactionService.deleteVacation(event.data.vacationId).subscribe({\r\n        next: () => {\r\n          event.confirm.resolve();\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        },\r\n        complete: () => {\r\n          this.source.refresh();\r\n          alert(\"deleted successfully\");\r\n        }\r\n      });\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event): void {\r\n    console.log(event.newData);\r\n    var isDate: boolean = this.isDateValid(event.newData.dateTime);\r\n    if (!isDate) {\r\n      alert('error: invalid date  ');\r\n    }\r\n    var vacactionForAdd: VacationAddDto = {\r\n      doctorId: event.newData.doctor,\r\n      dateTime: event.newData.dateTime\r\n    };\r\n    this.subs.sink = this.vacactionService.addVaction(event.newData).subscribe({\r\n      next: () => {\r\n        event.confirm.resolve();\r\n        const currentPage = this.source.getPaging().page;\r\n        this.reloadTableData(currentPage);\r\n      },\r\n      error: (error) => {\r\n        console.log('Error occurred:', error);\r\n      },\r\n      complete: () => {\r\n        this.source.refresh();\r\n        alert('Add Vacation Success');\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveConfirm(event): void {\r\n    alert(\"your cann't exeute this action\");\r\n  }\r\n  private reloadTableData(currentPage: number): void {\r\n    this.subs.sink = this.vacactionService.getVacations().subscribe({\r\n      next: (data) => {\r\n        this.source.load(data.body.vacations);\r\n        // this.source.setPaging(currentPage, this.source.getPaging().perPage);\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    })\r\n  }\r\n  isDateValid(dateString: string): boolean {\r\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n    const validFormat = dateRegex.test(dateString);\r\n\r\n    if (validFormat) {\r\n      const currentDate = new Date();\r\n      const selectedDate = new Date(dateString);\r\n      return selectedDate >= currentDate;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}","<nb-card>\r\n    <nb-card-body>\r\n      <ng2-smart-table\r\n        [settings]=\"settings\"\r\n        [source]=\"source\"\r\n        (createConfirm)=\"onCreateConfirm($event)\"\r\n        (editConfirm)=\"onSaveConfirm($event)\"\r\n        (deleteConfirm)=\"onDeleteConfirm($event)\"\r\n      >\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>\r\n  ","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ScheduleTableComponent } from \"../schedule/schedule-table/schedule-table.component\";\r\nimport { VacationComponent } from \"./VacationComponent\";\r\nimport { VacactionListComponent } from \"./vacaction-list/vacaction-list.component\";\r\n \r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: VacactionListComponent,\r\n    children: [\r\n      {\r\n        path: \"vacation-table\",\r\n        component: VacactionListComponent,\r\n      },\r\n    ],\r\n  },\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VacactionRoutingModule {}\r\nexport const routedComponents = [VacactionListComponent,VacationComponent];\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VacactionListComponent } from './vacaction-list/vacaction-list.component';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { VacactionRoutingModule, routedComponents } from './vacation-routing.module';\r\nimport { NbCardModule, NbIconModule, NbInputModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [\r\n    VacactionListComponent,\r\n    ...routedComponents,\r\n   ],\r\n  imports: [\r\n    CommonModule, \r\n    RouterOutlet, \r\n    VacactionRoutingModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    Ng2SmartTableModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class VacationModule { }\r\n","var isFunction = function (fn) { return typeof fn === 'function'; };\n/**\n * Subscription sink that holds Observable subscriptions\n * until you call unsubscribe on it in ngOnDestroy.\n */\nvar SubSink = /** @class */ (function () {\n    /**\n     * Subscription sink that holds Observable subscriptions\n     * until you call unsubscribe on it in ngOnDestroy.\n     *\n     * @example\n     * In Angular:\n     * ```\n     *   private subs = new SubSink();\n     *   ...\n     *   this.subs.sink = observable$.subscribe(...)\n     *   this.subs.add(observable$.subscribe(...));\n     *   ...\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     * ```\n     */\n    function SubSink() {\n        this._subs = [];\n    }\n    /**\n     * Add subscriptions to the tracked subscriptions\n     * @example\n     *  this.subs.add(observable$.subscribe(...));\n     */\n    SubSink.prototype.add = function () {\n        var subscriptions = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            subscriptions[_i] = arguments[_i];\n        }\n        this._subs = this._subs.concat(subscriptions);\n    };\n    Object.defineProperty(SubSink.prototype, \"sink\", {\n        /**\n         * Assign subscription to this sink to add it to the tracked subscriptions\n         * @example\n         *  this.subs.sink = observable$.subscribe(...);\n         */\n        set: function (subscription) {\n            this._subs.push(subscription);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Unsubscribe to all subscriptions in ngOnDestroy()\n     * @example\n     *   ngOnDestroy() {\n     *     this.subs.unsubscribe();\n     *   }\n     */\n    SubSink.prototype.unsubscribe = function () {\n        this._subs.forEach(function (sub) { return sub && isFunction(sub.unsubscribe) && sub.unsubscribe(); });\n        this._subs = [];\n    };\n    return SubSink;\n}());\nexport { SubSink };\n"],"names":["environment","throwError","catchError","VacationService","constructor","http","apiUrl","getVacations","url","get","observe","pipe","handleError","addVaction","createVacation","post","deleteVacation","vacationId","delete","error","errorMessage","ErrorEvent","message","status","console","log","factory","providedIn","VacationComponent","selectors","decls","vars","template","i0","LocalDataSource","SubSink","VacactionListComponent","vacactionService","add","addButtonContent","createButtonContent","cancelButtonContent","confirmCreate","edit","editButtonContent","saveButtonContent","confirmSave","deleteButtonContent","confirmDelete","columns","doctor","title","editor","type","config","list","filter","dateTime","editable","addable","actions","columnTitle","position","ngOnInit","subs","sink","subscribe","next","data","obj","body","source","load","vacations","settings","doctorPairs","ngOnDestroy","unsubscribe","onDeleteConfirm","event","window","confirm","resolve","complete","refresh","alert","reject","onCreateConfirm","newData","isDate","isDateValid","vacactionForAdd","doctorId","currentPage","getPaging","page","reloadTableData","onSaveConfirm","dateString","dateRegex","validFormat","test","currentDate","Date","selectedDate","consts","ctx","RouterModule","routes","path","component","children","VacactionRoutingModule","forChild","imports","exports","routedComponents","CommonModule","RouterOutlet","NbCardModule","NbIconModule","NbInputModule","Ng2SmartTableModule","ThemeModule","FormsModule","VacationModule","declarations","isFunction","fn","_subs","prototype","subscriptions","_i","arguments","length","concat","Object","defineProperty","set","subscription","push","enumerable","configurable","forEach","sub"],"sourceRoot":"webpack:///","x_google_ignoreList":[6]}