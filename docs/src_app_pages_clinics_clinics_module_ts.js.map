{"version":3,"file":"src_app_pages_clinics_clinics_module_ts.js","mappings":"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","sources":["./src/app/pages/clinics/ClinicsComponent.ts","./src/app/pages/clinics/clinics-list/clinics-list.component.ts","./src/app/pages/clinics/clinics-list/clinics-list.component.html","./src/app/pages/clinics/clinics-routing.module.ts","./src/app/pages/clinics/clinics.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-clinics',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class ClinicsComponent {\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ClinicService } from '../services/clinic.service';\r\nimport { SubSink } from 'subsink';\r\n\r\n@Component({\r\n  selector: 'ngx-clinics-list',\r\n  templateUrl: './clinics-list.component.html',\r\n  styleUrls: ['./clinics-list.component.scss']\r\n})\r\nexport class ClinicsListComponent implements OnInit, OnDestroy {\r\n\r\n  private subs = new SubSink();\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      name: {\r\n        title: 'Name',\r\n        type: 'string',\r\n      },\r\n      acceptedPatientsCount: {\r\n        title: 'Accepted Patients',\r\n        type: 'number',\r\n        filter: true\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private clinicService: ClinicService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subs.sink = this.clinicService.getClinics().subscribe({\r\n      next: (data) => {\r\n        this.source.load(data.body);\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      this.subs.sink = this.clinicService.deleteClinic(event.data.clinicId).subscribe({\r\n        next: () => {\r\n          event.confirm.resolve();\r\n        },\r\n        error: (error) => {\r\n          console.log(error);\r\n        }\r\n      });\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event): void {\r\n    this.subs.sink = this.clinicService.addClinic(event.newData).subscribe({\r\n      next: () => {\r\n        event.confirm.resolve();\r\n        const currentPage = this.source.getPaging().page;\r\n        this.reloadTableData(currentPage);\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveConfirm(event): void {\r\n    this.subs.sink = this.clinicService.updateClinic(event.newData).subscribe({\r\n      next: () => {\r\n        event.confirm.resolve();\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private reloadTableData(currentPage: number): void {\r\n    this.subs.sink = this.clinicService.getClinics().subscribe({\r\n      next: (data) => {\r\n        this.source.load(data.body);\r\n        this.source.setPaging(currentPage, this.source.getPaging().perPage);\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}","<nb-card>\r\n  <nb-card-body>\r\n    <ng2-smart-table\r\n      [settings]=\"settings\"\r\n      [source]=\"source\"\r\n      (createConfirm)=\"onCreateConfirm($event)\"\r\n      (editConfirm)=\"onSaveConfirm($event)\"\r\n      (deleteConfirm)=\"onDeleteConfirm($event)\"\r\n      id=\"table-clinic\"\r\n    >\r\n    </ng2-smart-table>\r\n    <ngx-xlsx [elementId]=\"'table-clinic'\" class=\"btn btn-info mb-3\"></ngx-xlsx>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ClinicsListComponent } from './clinics-list/clinics-list.component';\r\nimport { ClinicsComponent } from './ClinicsComponent';\r\n\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ClinicsComponent,\r\n  children: [\r\n    {\r\n      path: 'clinics-list',\r\n      component: ClinicsListComponent,\r\n    },\r\n  ],\r\n}];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\n\r\nexport class ClinicsRoutingModule { }\r\nexport const routedComponents = [\r\n  ClinicsComponent,\r\n  ClinicsListComponent\r\n];\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ClinicsListComponent } from './clinics-list/clinics-list.component';\r\nimport { NbCardModule, NbIconModule, NbInputModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ClinicsRoutingModule, routedComponents } from './clinics-routing.module';\r\nimport { PatientModule } from '../patient/patient.module';\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    ClinicsRoutingModule,\r\n    Ng2SmartTableModule,\r\n    PatientModule\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    ClinicsListComponent,\r\n  ],\r\n})\r\nexport class ClinicsModule { }\r\n"],"names":["ClinicsComponent","selectors","decls","vars","template","i0","LocalDataSource","SubSink","ClinicsListComponent","constructor","clinicService","add","addButtonContent","createButtonContent","cancelButtonContent","confirmCreate","edit","editButtonContent","saveButtonContent","confirmSave","delete","deleteButtonContent","confirmDelete","columns","name","title","type","acceptedPatientsCount","filter","ngOnInit","subs","sink","getClinics","subscribe","next","data","source","load","body","error","console","log","ngOnDestroy","unsubscribe","onDeleteConfirm","event","window","confirm","deleteClinic","clinicId","resolve","reject","onCreateConfirm","addClinic","newData","currentPage","getPaging","page","reloadTableData","onSaveConfirm","updateClinic","setPaging","perPage","consts","ctx","RouterModule","routes","path","component","children","ClinicsRoutingModule","forChild","imports","exports","routedComponents","NbCardModule","NbIconModule","NbInputModule","Ng2SmartTableModule","ThemeModule","PatientModule","ClinicsModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}